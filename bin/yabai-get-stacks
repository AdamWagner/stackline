#!/bin/dash

# ↑ dash for fast startup

# HELP {{{
usage() {
cat <<-EOF
USAGE
 Called by hammerspoon module 'stackline' on the following events:
   windowCreated, windowUnhidden, windowUnminimized,
   windowDestroyed, windowHidden, windowMinimized,
   windowMoved, windowFocused, windowUnfocused,
   windowFullscreened, windowUnfullscreened
 See ../stackline/core.lua

RETURNS window stack data
  as a json array of "stacks"
  where each stack is an array of windows:
  [
    [
      { "id": "123abc", … },
      {…},
      {…},
      {…},
    ],
    […]
  ]

DEPENDS on 'yabai' & 'jq'
EOF
}
if [ "$1" = "-h" ] || [ "$1" = "--help" ] ; then
  usage
  exit 1
fi
# }}}

# Set path per /etc/paths
#   Ensures that non-standard binaries `yabai` & `jq` are available
#   Alternatively, you may specify absolute paths
eval $(/usr/libexec/path_helper)

# The main course
yabai -m query --windows --space $YABAI_SPACE \
  | jq --raw-output --compact-output --monochrome-output '
      map(with_entries(select(
        .key == ("id", "app", "subrole", "frame", "focused", "stack-index", "visible")
        )))  # select only the fields that we need
    | map(select(
      .subrole == "AXStandardWindow" and
      .visible == 1))                              # minimized == 0 may be preferrable?
    | map(.frameFlat = "\(.frame.x)|\(.frame.y)")  # frame x,y to string to group wins → stacks
    | sort_by(.["stack-index"])
    | group_by(.frameFlat)                         # … the aforementioned grouping
    | map(select(length > 1))                      # we only care about *stacks*, which contain > 1 window
    '

